<% layout('template/common') %>
<% block('title').append('<title>'+(typeof(title)!=='undefined' ? title : 'List')+'</title>') %>
	
<!-- datepicker -->
<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>	
	
<script src="/web/flexform/jquery.tagsinput.js"></script>
<script>
<%
	var show_form = function(form) {
		form = JSON.parse(JSON.stringify(form));

		let moment = SR.API.getMoment();
		for (let field of form.data.fields) {
			if (field.type === 'date') {
				if (field.limit !== undefined ) {
					if (field.limit.max !== undefined) {
						field.max = moment()
							.add( (field.limit.max.year || 0), 'year')
							.add( (field.limit.max.month || 0), 'month')
							.add( (field.limit.max.day || 0), 'day')
							.format( "YYYY-MM-DD" );
					}
					if (field.limit.min !== undefined) {
						field.min = moment()
							.add( (field.limit.min.year || 0), 'year')
							.add( (field.limit.min.month || 0), 'month')
							.add( (field.limit.min.day || 0), 'day')
							.format( "YYYY-MM-DD" );
					}
				}
			}
		}
		SR.API.TRANSLATE_FORM_FIELDS({field_data: form.data}, function (err, field_data) {
			if (err) {
				return console.error(err);	
			}	
			// LOG.warn('form = ');
			// LOG.warn(form.data.field );
			form.data.field = field_data.field;
			if (typeof(para) !== 'undefined' && typeof(para.hide) !== 'undefined' )
				var hide = para.hide;
			else
				var hide = [];
			if (typeof(default_value) !== 'undefined') {
				LOG.warn('default_value = ');
				// LOG.warn(form.data);
				var default_keys = Object.keys(default_value);

				for (var i in form.data.fields)
					for (var j in default_keys)
						if (form.data.fields[i].id === default_keys[j]) 
							form.data.fields[i].default_value = default_value[default_keys[j]];
			}
			// LOG.warn(form.data.fields);
			
			var f2 = encodeURIComponent(JSON.stringify(hide));
			if (mode === 'new') 
				form.data.values = {};
			var f = encodeURIComponent(JSON.stringify(form));
			%> 
				var form = JSON.parse(decodeURIComponent("<%-f %>")); 
				var hide = JSON.parse(decodeURIComponent("<%-f2 %>")); 
				var sub_title = '<%=(typeof(s_title)!=='undefined')?s_title:form.name%>';
			<% 
		});
	}
	if (typeof(form) !== 'undefined') {
		show_form(form);
	} else if (typeof(para) !== 'undefined' && typeof(para.form_query) !== 'undefined' ) {
		SR.API.QUERY_FORM( para.form_query, function (err, form) {
			if (err) {
				LOG.warn(err);
				return ;
			}
			// 由language file 轉換 名稱 
			form = SR.API.transformFieldNameByLanguageFile({form, language});
			// LOG.warn('取得的form');
			show_form(form);
		});
	}
%>

var date_pickers = [];
var datepicker_setting = {
	//defaultDate : (new Date(new Date().getFullYear() - 60 + "/01/01") - new Date()) / (1000 * 60 * 60 * 24),
	defaultDate : new Date,
	yearRange : "-100:+0",
	maxDate : '+0',
	dayNamesMin : ['日', '一', '二', '三', '四', '五', '六'],
	monthNamesShort	: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
	//可使用下拉式選單 - 月份
	changeMonth : true,
	//可使用下拉式選單 - 年份
	changeYear : true,
	//設定 下拉式選單月份 在 年份的後面
	showMonthAfterYear : true,
	dateFormat: 'yy-mm-dd'
}
	
var onConnect = function () {
	init_html(function(err, html){
		console.log('hide = ');
		console.log(hide);
		document.getElementById('sub_title').innerHTML = sub_title;
		document.getElementById('data').innerHTML = html;	
		if (typeof(date_pickers) !== 'undefined') {
			for (var i=0; i < date_pickers.length; i++) {
				$(function() {
					$("#" + date_pickers[i]).datepicker(datepicker_setting);
				});
			}
		}
		$('.tags').tagsInput();
		// 解決chockbox無法按的BUG
		$('input[type=checkbox]+label').click(function(){
			$(this).prev().prop('checked', !$(this).prev().is(':checked'));
		});
	});
}

function init_html(onDone) {
	var html = '';	
	console.log('form = ');
	console.log(form);
	var create_table_para = {hide: hide};
	<% if (typeof(para) !== 'undefined' && typeof(para.customized) !== 'undefined' && para.customized ) { %>
		create_table_para.customized = true;
	<% } %>
	<% if (mode !== 'new' && mode !== 'modify') { %>
		// html += create_table(form, []);
		for(var record in form.data.values) {
			<% if ( typeof(para) !== 'undefined' && typeof(para.record_id) !== 'undefined' ) { %>
				if (record !== '<%=para.record_id%>')
					continue;
			<% } %>
			var f = SR.clone(form);
			f.data.values = {};
			f.data.values[record] = form.data.values[record];
			
			html += '<div id="show" style="border-width:1px;border-style:dashed;border-color:white;padding:3px;">';
			
			<% if (typeof(del) !== 'undefined' && del) { %>
				// html += create_table_v4(f, {hide: hide, write: false, del: true});
				create_table_para.write = false;
				create_table_para.del = true;
			<% } else { %>
				// html += create_table_v4(f, {hide: hide} );
			<% } %>
			html += create_table_v4(f, create_table_para );
			html += '</div>';
		}
	<% } else { %>
		console.log('')
		create_table_para.write = true;
		html += create_table_v4(form, create_table_para );   
	<% } %>
		
	<% if ( typeof(additional_area) !== 'undefined' ) { %>
		if(Object.keys(window).indexOf('<%=additional_area%>') !== -1) {
			var do_func = window['<%=additional_area%>'];
			do_func(html, function(err, result){
				if (err) {
					console.log(err);
					return ;
				}
				return onDone(null, result);
			});
		} else 
			return onDone(null, html);
	<% } else { %>
		return onDone(null, html);
	<% } %>
}
														
function flexform_custom_upload(field, record_id, values) {
	<% if (typeof(onBeforeUpload_name)!== 'undefined' ) {  %>
		if(Object.keys(window).indexOf('<%=onBeforeUpload_name%>') !== -1) {
			var do_func = window['<%=onBeforeUpload_name%>'];
			do_func(field, record_id, values, function(err, datas){
				if (err) {
					console.log(err);
					return ;
				}
				if (typeof(datas) === 'undefined')
					default_upload_v4(field, record_id, values);
				else
					default_upload_v4(datas.field, datas.record_id, datas.values);
			});
		} else
			default_upload_v4(field, record_id, values);
	<% } else { %>
		default_upload_v4(field, record_id, values);
	<% } %>
	
}													

function upload_callback(result, values) {
	<% if (typeof(onDone_name)!== 'undefined' ) {  %>
		if(Object.keys(window).indexOf('<%=onDone_name%>') !== -1) {
			var do_func = window['<%=onDone_name%>'];
			do_func(result, values);
		} else
			success();
	<% } else { %>
		success();
	<% } %>
}
function success() {
	alert('填寫已完成!!');
	window.history.back();
}

</script>

<div id="container">
	<%	if (typeof nav !== 'undefined') { %>
		<% include nav %>
	<% } %>

	<div id="mainContent">
		<section id="three" class="wrapper style2 special">
			<div class="inner">
				<h2 id='sub_title'></h2>
				<div id="data"></div>
			</div>
		</section>
		<div class="wrapper style2 special" style="text-align: center; padding-top: 0">
			<a class="button alt" href="javascript: history.back()">Back</a>
		</div>
	</div>
</div>
