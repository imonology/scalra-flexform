<% layout('template/common') %>
<% block('title').append('<title>' + (typeof title === 'string' ? title : '表格填寫') + '</title>') %>
<script src="/web/moment.min.js"></script>
<script src="/web/flexform/flexform.js"></script>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>	

<script>
var para = JSON.parse('<%-JSON.stringify(para) %>');
console.log('para:');
console.log(para);

var colnum = JSON.parse('<%-JSON.stringify(colnum) %>');
console.log('colnum:');
console.log(colnum);

var form_fields = {};
var form_values = {};

var modify = false;
var add =false;
var field_add = false;
var changeRecord_ids = [];

var onConnect = function () {
	console.log('使用flexform的');
	SR.API.QUERY_FORM(para, function (err, f) {
		if (err) {
			console.error(err);	
			alert(err);
			return;
		}
		console.log('forms = ');
		console.log(f);
		form_fields = f.data.fields;
		form_values = f.data.values;
		console.log('form fields');
		console.log(form_fields);
		console.log('form_values');
		console.log(form_values);
		reloadHtml();
	});
	// update file用
	document.querySelector('.readBytesButtons').addEventListener('click', function(evt) {
		if (evt.target.tagName.toLowerCase() == 'button') {
			var startByte = evt.target.getAttribute('data-startbyte');
			var endByte = evt.target.getAttribute('data-endbyte');
			readBlob(startByte, endByte);
		}
	}, false);
} // onConnect()

var reloadHtml = function() {
	var html = '';
	html += '<button type="button" onclick="clickModify()">'+(modify?'完成':'修改')+'</button>';
	html += '<table class="" class="customTable" >';
	var width = 100/(form_fields.length*colnum);
	html += '<tr>';
	for (var i = 0 ; i < colnum ; i++) 
		for (var j in form_fields) 
			html += '<td width="'+width+'%">'+form_fields[j].name+'</td>';
	html += '</tr>';
	var num = 0;
	for ( var record_id in form_values) {
		if ( num % colnum === 0 ) html += '<tr>';
		for (var j in form_fields) {
			html += '<td>' + (modify?'<input type="text" id="'+ form_fields[j].id + ' ' +record_id+'" onchange="changeItem(this.id)" value="': '') + (typeof(form_values[record_id][form_fields[j].id])=== 'undefined'?'':form_values[record_id][form_fields[j].id]) + (modify?'">':'')  +'</td>';
		}
		if (num % colnum === colnum - 1)  html += '</tr>';
		num++;
	}
	
	// 補</tr>
	if (num % colnum !== 0) html += '</tr>';

	html += '</table>';
	html += '<button type="button" id="add_btn" onclick="addField()">'+(field_add?'確定新增':'新增')+'</button>';
	document.getElementById("form_table").innerHTML = html;
} // reloadHtml()

var changeItem = function(field_record_id) {
	var ss = field_record_id.split(" ");
	// ss[0] : field
	// ss[1] : record_id
	for (var i in changeRecord_ids) 
		if (changeRecord_ids[i].record_id === ss[1])
			return;
	var data = {record_id: ss[1], form_name: para.name};
	changeRecord_ids.push(data);
} // changeItem()

var clickModify = function() {
	if (modify === false) {
		changeRecord_ids = [];
		modify = !modify;
		reloadHtml();
	} else { // 將修改寫進DB
		// 創建要修改的資料
		for (var i in changeRecord_ids) {
			var values = {};
			for (var j in form_fields) 
				values[form_fields[j].id] = document.getElementById(form_fields[j].id + ' ' + changeRecord_ids[i].record_id).value;
			changeRecord_ids[i].values = values;
		}
		
		updateFormToDB(changeRecord_ids, function(err){
			if (err) {
				alert(err);
				return;
			}
			modify = !modify;
			reloadHtml();
		});
	}
} // clickModify()

var checkType = function(fieldName, value, type) {
	if (value === '' ) 
		return '"' + fieldName + '"為必填欄位\n' ;
	else if (type === 'string')
		;
	else if (type === 'int' && !value.search(/^-?[0-9]+$/) == 0)
		return '"' + fieldName + '"需為整數，' + value + '不為整數\n';
	else if (type === 'float' && isNaN(value) )
		return '"' + fieldName + '"需為數字，' + value + '不為數字\n';
	else
		return '';
} // checkType()

var addField = function() {
	var html = '';
	if (!field_add) {
		html += '<table class="" class="customTable" >';
		for (var j in form_fields) 
			html += '<tr><td width="30%">'+form_fields[j].name+'</td><td><input type="text" id="add '+ form_fields[j].id +'"></td></tr>';
		html += '</table>';
		document.getElementById("add_btn").innerHTML = '確定新增';
		field_add = !field_add;
		document.getElementById("add_field").innerHTML = html;
	} else {
		var values = {};
		for (var j in form_fields) 
			values[form_fields[j].id] = document.getElementById("add " + form_fields[j].id).value;
		
		var add_field_para = {form_name: para.name, values: values};
		updateFormToDB([add_field_para], function(err){
			if (err) {
				alert(err);
				return;
			}
			document.getElementById("add_btn").innerHTML = '新增';
			reloadHtml();
			field_add = !field_add;
			document.getElementById("add_field").innerHTML = html;
		});
	}
} // addField()

var updateFormToDB = function (dataList, onDone) {
	if (dataList.length === 0) return onDone(null);
	var errorMessage = '';
	for (var i in dataList) {
		for (var j in form_fields) {
			var re = checkType(form_fields[j].name, dataList[i].values[form_fields[j].id], form_fields[j].type );
			if (re) errorMessage += re;
		}
	}
	if (errorMessage !== '') return onDone(errorMessage);
	SR.API.UPDATE_FORM_WITH_MULTIVALUES({
		form_array: dataList,
	}, function (err, result) {
		if (err) {
			return console.error(err);
		}
		for (var i in dataList)  
			form_values[result.record_ids[i]] = dataList[i].values;
		return onDone(null);
	});	
} // updateFormToDB()

// 讀檔相關
var readFile = [];
function readBlob(opt_startByte, opt_stopByte) {
    var files = document.getElementById('files').files;
    if (!files.length) {
      alert('Please select a file!');
      return;
    }

    var file = files[0];
    var start = parseInt(opt_startByte) || 0;
    var stop = parseInt(opt_stopByte) || file.size - 1;
    var reader = new FileReader();

    // If we use onloadend, we need to check the readyState.
    reader.onloadend = function(evt) {
		if (evt.target.readyState == FileReader.DONE) { // DONE == 2
			var sliceString = evt.target.result;
			console.log(sliceString);
			
			var all_item = sliceString.split(/\s+/);
			var input = [];
			for (var i=0 ; i < all_item.length ; i += form_fields.length) {
				var data = {form_name: para.name};
				var values = {};
				var temp = 0;
				for (j in form_fields){
					values[form_fields[j].id] = all_item[i+temp];
					temp++;
				}
				data.values = values;
				input.push(data);
			}
			
			updateFormToDB(input, function(err){
				if (err) {
					alert(err);
					return;
				}
				reloadHtml();
			});
		}
	};

    var blob = file.slice(start, stop + 1);
    reader.readAsText(blob);
}

//轉換class內容

var changeIcon = function () {
	var swapper = document.getElementById("swap").className;
	console.log(swapper);
	if (swapper === "fa fa-check-square-o")
		document.getElementById("swap").className = "fa fa-square-o";
	else if (swapper === "fa fa-square-o")
		document.getElementById("swap").className = "fa fa-check-square-o";
}

</script>
				
<section id="four" class="wrapper style2 special">
	<div class="inner">
		<header class="major narrow">
			<h2><div id="form_title"></div></h2>
		</header>
		
		<i id="swap" class="fa fa-square-o" aria-hidden="true" onclick="changeIcon()"></i>
		<input type="file" id="files" name="file" />
		<span class="readBytesButtons">
		  <button>entire file</button>
		</span>

		<div id="form_table" ></div>
		<div id="add_field" ></div>

		<ul class="actions">						
			<!-- <li><a class="button special" href="javascript:submit()">送出</a></li> -->
			<li><a class="button special" href="/main">回主畫面</a></li>
		</ul>
	</div>
</section>

