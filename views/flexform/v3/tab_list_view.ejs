<% layout('template/common') %>
<% block('title').append('<title>'+(typeof(title)!=='undefined' ? title : 'List')+'</title>') %>
	
<script src="/web/flexform/jquery.tagsinput.js"></script>


<script>
<%
var f1 = encodeURIComponent(JSON.stringify(para));
var forms = {};
var error = false;
var error_message = '';
// var form_count = 0;
function l_query_form(para) {
	return function(onD) {
		l_do_query_form(para, onD);
	}
}
function l_do_query_form(p, onDone) {
	var i = p.use_page;
	LOG.warn('i = ' + i);
	LOG.warn(para);
	if (typeof(para[i].form_query)==='undefined' && typeof(para[i].form) === 'undefined') {
		return onDone(null);
	} 
	if (typeof(para[i].form)!== 'undefined') {
		forms[i] = [];
		forms[i].push(para[i].form);
		return onDone(null);
	}
	SR.API.QUERY_FORM( para[i].form_query, function (err, form) {
		if (err) {
			error = true;
			error_message = err;
			return err;
		}

		var clone_f = JSON.parse(JSON.stringify(form));
		if (typeof(para[i].default_value) !== 'undefined') {
			var default_keys = Object.keys(para[i].default_value);

			for (var j in clone_f.data.fields) {
				for (var k in default_keys) {
					if (clone_f.data.fields[j].id === default_keys[k]) {
						clone_f.data.fields[j].default_value = para[i].default_value[default_keys[k]];
					}
				}
			}
		}
		
		forms[i] = [];
		
		forms[i].push(clone_f);
		
		if (!para[i].related_form) {
			add_data(forms[i].length -1);
		}
		
		var related_form_count = 0;
		for (var j in para[i].related_form){
			SR.API.QUERY_FORM( para[i].related_form[j].form_query, function (err, form) {
				if (err) {
					error = true;
					error_message = err;
					return err;
				}
				var clone_f = JSON.parse(JSON.stringify(form));
				forms[i].push(clone_f);
				related_form_count++;
				if (related_form_count === para[i].related_form.length) {
					
					return onDone(null);
				}
			});
		}
		
		function add_data(form_position) { // 從其他form新增資料
			if (typeof(para[i].add_data) !== 'undefined') {
				LOG.warn('需要新增資料的form');
				var pointers = Object.keys(forms[i][form_position].data.values); // 新增資料 指向的record_id
				
				var jq2 = SR.JobQueue.createQueue();
				
				for (var j in para[i].add_data) {
					// {form_name: 'CaseOwner', pointer: 'case_form_id', add_id: ['name']},
					
					jq2.add(l_add_form({add_para: para[i].add_data[j]}));
					
					function l_add_form(l_add_form_para) {
						return function(onD) {
							l_do_add_form(l_add_form_para, onD);
						}
					}
					function l_do_add_form(l_add_form_para, onDone2) {
						var add_para = l_add_form_para.add_para;
						SR.API.QUERY_FORM( {name: add_para.form_name}, function (err, add_form) {
							if (err) {
								error = true;
								error_message = err;
								return err;
							}
							// 先塞入field內容
							for (var k in add_form.data.fields) {
								for (var l in add_para.add_id) {
									if (add_form.data.fields[k].id === add_para.add_id[l]) {
										forms[i][form_position].data.fields.push(add_form.data.fields[k]);			
									}
								}
							}
							// 依照pointer和需要的record_id塞入data
							for (var record_id in add_form.data.values) {
								for (var k in pointers) {
									if (add_form.data.values[record_id][add_para.pointer] === pointers[k]) {
	
										// LOG.warn(add_form.data.values[record_id])
										for (var l in add_para.add_id) {
											LOG.warn( add_form.data.values[record_id][add_para.add_id[l]] );
											forms[i][form_position].data.values[pointers[k]][add_para.add_id[l]] = add_form.data.values[record_id][add_para.add_id[l]];
										}
									}
								}
							}
							return onDone2(null);
						});
						
					}
				}
				
				jq2.run(function (err) {
					
					return onDone(null);
				});
				// LOG.warn(forms[i][form_position].data.values)
				// LOG.warn(para[i].add_data);
				
				
			} else {
				return onDone(null);
			}
		}
		
	});
}
var jq = SR.JobQueue.createQueue();
for (var i in para)	{
	jq.add(l_query_form({use_page: i}));
}
jq.run(function (err) {
	var f2 = encodeURIComponent(JSON.stringify(forms));
	%> 
		var para = JSON.parse(decodeURIComponent("<%-f1 %>")); 
		var forms = JSON.parse(decodeURIComponent("<%-f2 %>")); 
		var use_page = 0;
		var getGlobalVariable_func = '<%=(typeof(getGlobalVariable)!=="undefined"?getGlobalVariable:"")%>'; // 自定義global變數
		var account = '<%=login.account%>';
	<%	
});	
%>

	
var g_value = {};
var add_forms = {};
var onConnect = function () {
	if (getGlobalVariable_func !== '' && Object.keys(window).indexOf(getGlobalVariable_func) !== -1) {
		var do_func = window[getGlobalVariable_func];
		console.log(window)
		do_func(function(err, datas){
			init_tab();
			init_html(init_onDone);
		});
	} else {
		init_tab();
		init_html(init_onDone);
	}
}

function init_onDone(err, html) {
	document.getElementById('sub_title').innerHTML = para[use_page].s_title;
	document.getElementById('form_area').innerHTML = html;	
	if ( typeof(para[use_page].add_button) !== 'undefined' && para[use_page].add_button ) {
		var add_btn = '<button class="btn btn-primary" onclick="click_add_btn()" style="left:5px;">新增</button>';
		document.getElementById('sub_title').innerHTML += add_btn
	}
	init_submit_btn();
	enable_js();
}
	
function click_add_btn() {
	if(para[use_page].add_button_func && Object.keys(window).indexOf(para[use_page].add_button_func) !== -1) {
		var do_func = window[para[use_page].add_button_func];
		do_func(para, function(err, datas){

		});
	} 
}

function init_tab() {
	if (para.length === 1)
		return '';
	var html = '';
	html += '<ul class="tabs">';
	for (var i in para) {
		html += '<li '+(i==='0'?'class="active"': '')+' onclick="switch_tab('+i+')">'+para[i].s_title+'</li>';
	}
	html += '</ul>';
	html += '<div style="clear:both;"></div>';
	document.getElementById('tab_area').innerHTML = html;	
}

function switch_tab(n) {
	use_page = parseInt(n);

	init_html(init_onDone);
}

function init_html(onDone) {
	if (para[use_page].type === 'view') {
		init_view(onDone);
	} else if (para[use_page].type === 'list') {
		init_list(onDone);
	}
}

var final_flextable_data = null;
	
function processing_data(onDone) {
	var flextable_data = SR.API.flexform_to_flexform_table({form: forms[use_page][0]}); // 目前list只支援顯示一個form
	flextable_data = do_add_field(flextable_data, para[use_page].add_field);
	if(para[use_page].before_show_call_func && Object.keys(window).indexOf(para[use_page].before_show_call_func) !== -1) {
		var do_func = window[para[use_page].before_show_call_func];
		do_func(flextable_data, para, function(err, datas){

			return onDone(null, flextable_data);
		});
	} else {
		return onDone(null, flextable_data);
	}
	

}
	
function init_list(onDone) {
	processing_data(function(err, flextable_data){
		final_flextable_data = flextable_data;
		var html = '';
		var default_entries = 10;
		// 一次顯示多少entries和search
		html += '<div id="list_bar">';
		html += '<div id="show_line_area">';
		html += 'Show '
		html += '<select id="show_line" onchange="switch_show_entries(this)">';
		html += '<option value="10">10</option>';
		html += '<option value="15">15</option>';
		html += '<option value="20">20</option>';
		html += '<option value="30">30</option>';
		html += '</select>';
		html += ' Entries';
		html += '</div>';
		if(typeof(para[use_page].search_bar)!=='undefined' && para[use_page].search_bar) {
			html += '<div id="search_area">';
			html += '<p style="display:inline; margin-right: 10px;">Search:</p>';
			html += '<input type="text" id="search_list" style="width:auto;">';
			html += '</div>';
		}
		html += '</div>';
		// list table內容
		html += '<div id="list_area">';
		html += flexform_show_table_v3( flextable_data, {hide: para[use_page].hide, show: para[use_page].show, page_entries: {page: 1, entries: default_entries} } ) ;
		html += '</div>';
		html += '<div id="switch_page_area">';
		html += get_switch_page_area( flextable_data, default_entries );
		html += '</div>';
		return onDone(null, html);
	});
}

function get_switch_page_area(flextable_data, entries) {
	var html = '';
	var n = flextable_data.data.length;
	if (n <= entries) // 全部數量小於一頁顯示的數量
		return html;
	var page_num = parseInt(n/entries); // 算出總需要頁數
	if ( n % entries !== 0 )
		page_num++;
	var width = (page_num + 2) * 40

	html += '<table class="page_controler" style="width:'+width+'px;border-collapse: collapse;float:right;margin-top: 4px;"><tr>';
	var border_sytle = 'style="width:40px;border-style: solid;border-width: 1px;border-color: rgba(204, 204, 204, 1);text-indent: 0px;text-align: center;"';
	html += '<td '+border_sytle+' onclick="switch_page(this)"><</td>';
	for (var i = 0 ; i < page_num ; i++) {
		html += '<td '+border_sytle+' '+(i===0? 'class="active"': '')+' onclick="switch_page(this)">'+(i+1)+'</td>'
	}
	html += '<td '+border_sytle+' onclick="switch_page(this)">></td>';
	html += '</tr>';
	// console.log(html)
	return html;
}
	
function switch_show_entries(select) {
	var show_entries = parseInt(select.value);
	document.getElementById('list_area').innerHTML = flexform_show_table_v3( final_flextable_data, {hide: para[use_page].hide, show: para[use_page].show, page_entries: {page: 1, entries: show_entries} } ) ;
	document.getElementById('switch_page_area').innerHTML = get_switch_page_area(final_flextable_data, show_entries);
	enable_js();
}
	
function switch_page(obj) {
	var page = obj.innerHTML;
	if (page === '&gt;' || page === '&lt;') {
		var all = $('table.page_controler td');
		for (var i in all) {
			if (all[i].className === 'active') {
				if (page === '&lt;' && i !== 1 ) {
					all[parseInt(i)-1].click();
					break;
				}
				if (page === '&gt;' && i !== all.length -1 ) {
					all[parseInt(i)+1].click();
					break;
				}
			}
		}
	} else {
		var entries = parseInt(document.getElementById('show_line').value);
		page = parseInt(page);

		document.getElementById('list_area').innerHTML = flexform_show_table_v3( final_flextable_data, {hide: para[use_page].hide, show: para[use_page].show, page_entries: {page: page, entries: entries} } ) ;
	}
	
}
	
	
function do_add_field(flextable_data, add_field) {
	if (typeof(add_field) === 'undefined')
		return flextable_data;
	for (var i in add_field) {
		var position = (typeof(add_field[i].position) !== 'undefined' ? add_field[i].position : flextable_data.field.length);
		if (add_field[i].type === 'button') {
			var add_value = [];
			for (var j in flextable_data.data) {
				var temp = '<button id="'+add_field[i].btn_id+'" class="btn btn-modify" onClick="'+add_field[i].func_name+'(';
				var first = true;
				for (var k in add_field[i].value) {
					if (first) 
						first = false;
					else
						temp += ', ';

					temp += '\''+ flextable_data.data[j][add_field[i].value[k]] +'\'';
				}
				temp += ')">'+add_field[i].field_name+'</button>';
				add_value.push(temp);
			}
			flextable_data = SR.API.flexform_table_add_field({insert_num : position, flexform_table : flextable_data, field : {key: add_field[i].func_nameid: add_field[i].func_name, value: add_field[i].field_name}, datas : add_value});
		} else if (add_field[i].type === 'link') {
			var add_value = [];
			for (var j in flextable_data.data) {
				var temp = '<a href="' + add_field[i].link_url + '?';
				var first = true;
				for (var k in add_field[i].value) {
					if (first) 
						first = false;
					else
						temp += '&';
					temp += add_field[i].value[k] + '=' + flextable_data.data[j][add_field[i].value[k]] ;
				}
				temp += '"';
				if (add_field[i].link_type && add_field[i].link_type === 'new_tab') 
					temp += ' target="_blank" ';
				temp += '>'+add_field[i].link_name+'</a>';
				add_value.push(temp);
			}
			flextable_data = SR.API.flexform_table_add_field(
				{
					insert_num : flextable_data.field.length, 
					flexform_table : flextable_data, 
					field : {
						key: add_field[i].field_id, 
						id: add_field[i].field_id, 
						value: add_field[i].field_name
					},
					datas : add_value
				}
			);
		} else if (add_field[i].type === 'serial_number') {
			let sn = [...Array(flextable_data.data.length).keys()].map(x => ++x);
			flextable_data = SR.API.flexform_table_add_field(
				{
					insert_num : flextable_data.field.length,,
					flexform_table : flextable_data, 
					field : {
						key: add_field[i].field_id, 
						id: add_field[i].field_id, 
						value: add_field[i].field_name
					},
					datas : sn
				}
			);
		}
	}
	return flextable_data;
}
		
// ------------------------------------ 底下是view --------------------------------------------

function init_view(onDone) {
	var html = '';
	var page_forms = forms[use_page];
	console.log('page_forms = ')
	console.log(page_forms)
	// 填入動態select選項
	for (var i in page_forms) {
		var fields = page_forms[i].data.fields;
		for (var i in fields) 
			if (fields[i].type === 'choice') {
				if ( typeof(fields[i].setting) !== 'undefined' && fields[i].setting.option ) {
					if (typeof(fields[i].setting.option) !== 'undefined' && typeof(window[fields[i].setting.option]) !== 'undefined' ){
						var do_func = window[fields[i].setting.option];
						fields[i].option = do_func();
					}
				}
			}
	}
	
	for (var i in page_forms) {
		if (i !== '0') {
			add_forms[(parseInt(i)-1)] = [];
			html += '<hr>'
			html += '<div class="add_expansion_title">';
			html += '<div class="expansion_form_id"><p class="form_title">' + para[use_page].related_form[(parseInt(i)-1)].form_title + '</p></div>';
			html += '<div class="add_expansion_form" onclick="add_expansion_form('+(parseInt(i-1))+')"><span class="plus_btn">+</span></div>';
			html += '</div>';
		}
		if (i === '0') {
			html += '<div id="main_form">';
		} else {
			html += '<div id="expansion_form_'+(parseInt(i)-1)+'">';
			console.log('<div id="expansion_form_'+(parseInt(i)-1)+'">')
		}

		if (para[use_page].mode === 'new') {
			page_forms[i].data.values = {};
			html += create_table_v3(page_forms[i], get_form_para());
		} else {
			var first = true;
			for (var record_id in page_forms[i].data.values) {
				var form = JSON.parse(JSON.stringify(page_forms[i]));
				form.data.values = {};
				form.data.values[record_id] = page_forms[i].data.values[record_id];
				if (first) {
					html += create_table_v3(form, get_form_para());
					first = false;
				} else {
					if ((parseInt(i)-1) >= 0)
						html += create_expansion_form_html((parseInt(i)-1), form);

				}
			}
		}
		
		
		html += '</div>';

	}
	
	return onDone(null, html);
}
		
function init_submit_btn() {
	if (para[use_page].type === 'view' && para[use_page].mode !== 'show') {
		document.getElementById('button_area').innerHTML = 	'<button class="btn btn-primary" onClick="check_upload_v3()" style="left: 446px;">送出</button>';
	} else {
		document.getElementById('button_area').innerHTML = '';
	}
}
	
function flexform_v3_before_upload(values) {
	if (typeof(para[use_page].onBeforeUpload_name) !== 'undefined' && typeof(window[para[use_page].onBeforeUpload_name]) !== 'undefined' ){
		var do_func = window[para[use_page].onBeforeUpload_name];
		do_func(values, function(err, datas){
			default_upload_v3(datas);
		});
	} else 
		default_upload_v3(values);
}
		
function enable_js() {
	$('ul.tabs li').click(function() {
		var $this = $(this), _clickTab = $this.find('a').attr('href');
		$this.addClass('active').siblings('.active').removeClass('active');
	});
	$('table.page_controler td').click(function() {
		var $this = $(this), _clickTab = $this.find('a').attr('href');
		if (!isNaN($this.text()))
			$this.addClass('active').siblings('.active').removeClass('active');
	});
	if (typeof(date_pickers) !== 'undefined') {
		$.datepicker.initialized = false;
		$(function() {
			date_pickers.forEach(date_picker => {
				$("#" + date_picker).datepicker(datepicker_setting);
			});
		})
	}
	$('.tags').tagsInput();
	$("input[type='radio']").on('change', function() {

		$("input[name='"+$(this).attr('name')+"']").attr('checked', false);
		// $(this).attr("checked", $(this).val());
		$(this).attr('checked', true);
		$(this).prop('checked', true);
		
	});
	$("input[type='text']").on('keyup', function() {
		$(this).attr("value",$(this).val())
	});
	$("select").on('change', function() {
		var s_v = $(this).val();
		console.log( $(this).val() )
		// $(this).attr('selected', true);
		$(this).children().each(function(){
			if ($(this).text()===s_v){
				//jQuery給法
				$(this).attr("selected", true);
			} else {
				$(this).attr("selected", false);
			}
		})
	});

	$('.hasDatepicker').on('focus', function() {

	    // store the element for use inside the position function
	    var $target = $(this);

	    // get the elements datepicker widget object and set it's position based on the target element
	    $target.datepicker('widget').position({

	        my: 'left top',
	        at: 'left bottom',
	        of: $target
	    });
	});
}

function get_form_para() {
	var form_para = {};
	if (typeof(para[use_page].customized)!=='undefined' && para[use_page].customized) {
		form_para.customized = para[use_page].customized;
	}
	if (typeof(para[use_page].lock)!=='undefined' && para[use_page].lock) {
		form_para.lock = para[use_page].lock;
	}
	form_para.hide = para[use_page].hide;
	if (para[use_page].mode === 'show') {
		form_para.write = false;
	} else {
		form_para.write = true;
	}
	return form_para;
}
		
function get_new_expansion_form_number(n) { // 取得第n個expansion_form的新號碼
	for (var i = 0 ; i <= add_forms[n].length ; i++) {
		if (add_forms[n].indexOf(i) === -1) {
			return i;
		}
	}
}
		
function create_expansion_form_html(n, form) { // 第n個expansion_form
	var use_form = (form ? form : forms[use_page][n+1] );

	var expansion_form_number = get_new_expansion_form_number(n);
	var html = '<div id="expansion_form_'+n+'-'+expansion_form_number+'">';
	html += '<hr>';
	html += '<div class="add_expansion_title">';
	html += '<div class="expansion_form_id"><p class="form_title">' + para[use_page].related_form[n].form_title + '</p></div>';
	html += '<div class="minus_expansion_form" onclick="minus_expansion_form('+n+', '+expansion_form_number+')"><span class="plus_btn">-</span></div>';
	var form_para = get_form_para();
	form_para.id_num = expansion_form_number;
	html += create_table_v3(use_form, form_para);
	
	html += '</div>';
	html += '</div>';
	add_forms[n].push(expansion_form_number);
	return html;
}

function add_expansion_form(n) {
	var form = JSON.parse(JSON.stringify(forms[use_page][n+1]));
	form.data.values = {};
	
	document.getElementById("expansion_form_"+n).innerHTML += create_expansion_form_html(n, form);
	console.log('upload_record_id');
	console.log(upload_record_id)
	// console.log('add_forms = ')
	// console.log(add_forms)
	var insert_num = n+1;
	for ( var i = 0 ; i <= n ; i++ ) {
		insert_num += Object.keys(add_forms[i]).length;
	}
	// console.log('n = ' + n)
	// console.log('insert_num = ' + insert_num)
	upload_record_id.splice(insert_num, 0, '')

	enable_js();
}

var delete_list = {};

function minus_expansion_form(n, expansion_form_number) {
	swal({ 
		title: "確定刪除嗎", 
		type: "warning",
		showCancelButton: true, 
		confirmButtonColor: "#DD6B55",
		confirmButtonText: "確定刪除！", 
		cancelButtonText: "取消刪除！",
	}).then((result) => {
		if (result.value) {
			var delete_num = n+2 + add_forms[n].indexOf(expansion_form_number);
			for ( var i = 0 ; i < n ; i++ ) {
				delete_num += Object.keys(add_forms[i]).length;
			}

			if ( !delete_list[forms[use_page][n+1].name] )
				delete_list[forms[use_page][n+1].name] = [];
			if ( upload_record_id[delete_num] !== '' )
				delete_list[forms[use_page][n+1].name].push( upload_record_id[delete_num] );
			console.log('delete list = ');
			console.log(delete_list)
			upload_record_id.splice(delete_num, 1)
			$("#expansion_form_"+n+"-"+expansion_form_number).remove();
			add_forms[n].splice(add_forms[n].indexOf(expansion_form_number), 1);
		}
	});
}
	
function flexform_v3_upload_onDone(result) {
	SR.API.DELETE_FIELD_LIST({delete_list: delete_list}, function (err, result) {
		if (err) {
			console.log(err);
			return;
		}
		if (para[use_page].onDone_name !== '' && Object.keys(window).indexOf(para[use_page].onDone_name) !== -1) {
			var do_func = window[para[use_page].onDone_name];
			do_func(result);
		} else {
			alert('上傳成功');
			window.location.reload();
		}
	});
}

</script>

<div id="container">
	<%	if (typeof nav !== 'undefined') { %>
		<% include nav %>
	<% } %>

	<div id="mainContent">
		<section id="three" class="wrapper style2 special">
			<div class="inner" id="main_area">
				<div id="tab_area"></div>
				<h2 id='sub_title' class="sub_title"></h2>
				<div id="form_area"></div>
				<div id="button_area"></div>
			</div>
		</section>
	</div>
</div>
